import requests
from config import whitelist
from utils import send_log
from database import save_query_log

def analyze_article(bot, message):
    art = message.text.strip()
    user_id = str(message.chat.id)
    send_log(user_id, art)
    save_query_log(user_id, art)

    base_url = f"https://alm-basket-cdn-02.geobasket.ru/vol{art[0:4]}/part{art[0:6]}/{art}"

    # --- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ ---
    info_url = f"{base_url}/info/ru/card.json"
    resp = requests.get(info_url)
    if resp.status_code == 200:
        data = resp.json()
        bot.send_message(message.chat.id, f"üì¶ {data.get('imt_name', '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ')}")
        bot.send_message(message.chat.id, f"üî¢ –ê—Ä—Ç–∏–∫—É–ª: {data.get('imt_id', '-')}")
        bot.send_message(message.chat.id, f"üé® –¶–≤–µ—Ç: {data.get('nm_colors_names', '-')}")
        bot.send_message(message.chat.id, f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {data.get('description', '-')}")
        bot.send_message(message.chat.id, f"üìÇ –¢–∏–ø: {data.get('subj_name', '-')}")
        bot.send_message(message.chat.id, f"üè∑ –ë—Ä–µ–Ω–¥: {data.get('selling', {}).get('brand_name', '-')}")
    else:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ")

    # --- –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω ---
    price_url = f"{base_url}/info/price-history.json"
    resp2 = requests.get(price_url)
    if resp2.status_code == 200:
        try:
            data2 = resp2.json()
            prices = [round(item['price']['RUB'] * 6.4 / 100) for item in data2 if 'RUB' in item['price']]
            if prices:
                current = prices[-1]
                avg = sum(prices) / len(prices)
                level = "–¶–µ–Ω–∞ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–π" if current < avg else "–¶–µ–Ω–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π" if current > avg else "–¶–µ–Ω–∞ —Ä–∞–≤–Ω–∞ —Å—Ä–µ–¥–Ω–µ–π"
                bot.send_message(message.chat.id, f"üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {round(avg)}‚Ç∏\nüí∏ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {current}‚Ç∏\nüìâ –£—Ä–æ–≤–µ–Ω—å —Ü–µ–Ω—ã: {level}")
            else:
                bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—É—Å—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω")
        except:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω")

    # --- –†–µ–π—Ç–∏–Ω–≥ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ ---
    details_url = f"https://card.wb.ru/cards/v2/detail?appType=1&curr=kzt&dest=269&spp=30&nm={art}"
    resp3 = requests.get(details_url)
    if resp3.status_code == 200:
        try:
            product = resp3.json()['data']['products'][0]
            rating = product.get('reviewRating', 'N/A')
            feedbacks = product.get('feedbacks', 'N/A')
            bot.send_message(message.chat.id, f"üìä –†–µ–π—Ç–∏–Ω–≥: {rating} ‚≠ê\nüí¨ –û—Ç–∑—ã–≤–æ–≤: {feedbacks}")
        except:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥")
    else:
        bot.send_message(message.chat.id, "‚ùå –†–µ–π—Ç–∏–Ω–≥ –Ω–µ –ø–æ–ª—É—á–µ–Ω")

    # --- –û—Ç–∑—ã–≤—ã (–≤–æ–ø—Ä–æ—Å—ã/–æ—Ç–≤–µ—Ç—ã) ---
    imt_id = data.get('imt_id')
    if imt_id:
        q_url = f"https://questions.wildberries.ru/api/v1/questions?imtId={imt_id}&take=3&skip=0"
        q_resp = requests.get(q_url)
        if q_resp.status_code == 200:
            try:
                questions = q_resp.json().get('questions', [])
                if questions:
                    msgs = ["üó£ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã:"]
                    for q in questions:
                        text = q.get('text', '')
                        answer = q.get('answer', {}).get('text', '')
                        msgs.append(f"‚ùì {text}\nüí¨ {answer if answer else '–ë–µ–∑ –æ—Ç–≤–µ—Ç–∞'}")
                    bot.send_message(message.chat.id, "\n\n".join(msgs))
                else:
                    bot.send_message(message.chat.id, "–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤")
            except:
                bot.send_message(message.chat.id, "‚ö† –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤")